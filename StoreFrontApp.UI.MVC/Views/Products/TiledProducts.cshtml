@*
    Paged List - Step 2
*@

@model IPagedList<StoreFrontApp.DATA.EF.Models.Product>
@using X.PagedList.Mvc.Core;
@using X.PagedList;


@{
    ViewData["Title"] = "Order Menu";
}

<section class="product_section layout_padding gray-section pb-4 pt-4">
    <div class="container">
        <div class="heading_container heading_center">
            <h2>
                Order <span>Food</span>
            </h2>
            <p align="center">

                @if (User.IsInRole("Admin"))
                {
                        <span>
                            <a asp-action="Create">Add New Product</a> |
                            <a asp-action="Discontinued">Discontinued Products</a> |
                        </span>
                }

                <a asp-action="Index">Table View</a>

            </p>
        </div>

        <div class="row">
            @*
                Search - Step 1
                - Add the <form>
                - Add the <input> textbox
                - Add the <input> submit
            *@

            <div class="offset-3 col-sm-6">

                <form asp-action="TiledProducts" method="get">

                    @*
                        DDL - Step 2
                    *@

                    <label for="categoryId" class="control-label d-block text-center">Filter by Category</label>
                    <select name="categoryID" onchange="this.form.submit()" class="form-control text-center mb-3" asp-items="ViewBag.CategoryId">
                        <option value="0">[Choose a category]</option>
                    </select>

                    @*
                        The 'name' attribute of this textbox MUST match the parameter name in the TiledProducts() action
                    *@
                    <input type="text" name="searchTerm" placeholder="Search products" class="form-control text-center" value="@ViewBag.SearchTerm" />
                    <input type="submit" value="Apply Filters" class="btn btn-primary text-center w-50 d-block" />
                </form>

                @if (ViewBag.NbrResults != null)
                {
                        <p class="mt-5 p-2 alert-warning text-center">
                            Showing @ViewBag.NbrResults result@(ViewBag.NbrResults > 1 ? "s" : "") for '@ViewBag.SearchTerm'...
                        </p>
                }

            </div>

            @foreach (var item in Model)
            {
                <div class="col-sm-6 col-md-4 col-lg-4">
                    <div class="box">
                        <div class="option_container">
                            <div class="options">
                                <a asp-action="Details" asp-route-id="@item.ProductId" class="option1">
                                    Details
                                </a>
                                <a asp-action="Customize" asp-route-id="@item.ProductId" class="option2">
                                    Customize
                                </a>
                                <a asp-action="AddToCart" asp-controller="ShoppingCart" asp-route-id="@item.ProductId" class="option3">
                                    Add to Cart
                                </a>
                            </div>
                        </div>
                        <div class="img-box">
                            <img src="~/images/@item.ProductImage" alt="@item.ProductName" longdesc="@item.ProductDescription" />
                        </div>
                        <div class="detail-box">
                            <h5>
                            @item.ProductName
                            </h5>
                            <h6>
                            @Html.DisplayFor(modelItem => item.ProductPrice)
                            </h6>
                                 
                        </div>
                    </div>
                </div>

            }
           

        </div>

        @*
            Paged List - Step 6
        *@

        <div class="row mt-5">
            <div class="w-50 mx-auto text-center">
                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
                <div class="w-100">
                    @Html.PagedListPager(Model, page => Url.Action("TiledProducts", new {page, searchTerm = ViewBag.SearchTerm, categoryId = ViewBag.CategoryId}))
                </div>
            </div>
        </div>


        <div class="btn-box">
            <a asp-action="TiledProducts">
                View All products
            </a>
        </div>
    </div>
</section>






















@*<h1>TiledProducts</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductDescription)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsInStock)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsDiscontinued)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductImage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Season)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductPrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductDescription)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsInStock)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsDiscontinued)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductImage)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.CategoryName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Season.SeasonDescription)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.ProductId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.ProductId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.ProductId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
*@