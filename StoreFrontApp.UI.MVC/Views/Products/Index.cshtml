@model IEnumerable<StoreFrontApp.DATA.EF.Models.Product>

@{
    ViewData["Title"] = "Online Menu";
}

@*  Steps to implement Datatables (for client-side search, filter, & page)
        1) (_Layout) add the <script> for jQuery.js -- ONLY if it doesn't already exist
        2) (_Layout) add the <script> for datatables.js (found on the plugin's website - either available from CDN or file download)
        3) (_Layout) add the <link> for datatables.css (if required - some plugins do not require any CSS)
        4) (Index) add/modify your HTML to fit the requirements of the plugin
            - Here, we use Datatables with the default scaffolded <table> from EF - we don't need to make any adjustments
            to implement the basic datatables functionality
        5) (Index) call the plugin function from @section Scripts { }
        6) (optional - CSS or Plugin Function) Customize the plugin - update styles, modifying the default implementation
*@

<div class="all-title-box">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <h2>Online Menu</h2>
                <ul class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Home</a></li>
                    <li class="breadcrumb-item active">Online Menu</li>
                </ul>
            </div>
        </div>

    </div>
</div>

<div class="container">
    <p align="center">
        @if (User.IsInRole("Admin"))
        {

            <span>
                <a asp-action="Create">Add A New Product</a> |
                <a asp-action="Discontinued">Discontinued Products</a> |
            </span>
        }
        <a asp-action="TiledProducts">Tile View</a>
    </p>
</div>



<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductPrice)
            </th>
            @*<th>
            @Html.DisplayNameFor(model => model.ProductDescription)
            </th>
            <th>
            @Html.DisplayNameFor(model => model.IsInStock)
            </th>
            <th>
            @Html.DisplayNameFor(model => model.IsDiscontinued)*@
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductImage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Season)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <a asp-action="Details" asp-route-id="@item.ProductId">
                        @Html.DisplayFor(modelItem => item.ProductName)
                    </a>

                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductPrice)
                </td>
                @*<td>
            @Html.DisplayFor(modelItem => item.ProductDescription)
            </td>
            <td>
            @Html.DisplayFor(modelItem => item.IsInStock)
            </td>
            <td>
            @Html.DisplayFor(modelItem => item.IsDiscontinued)
            </td>*@
                <td>
                    @*@Html.DisplayFor(modelItem => item.ProductImage)*@
                    <img src="~/images/t_@item.ProductImage" class="img-fluid" alt="@item.ProductDescription" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.CategoryName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Season.SeasonDescription)
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.ProductId">Details</a>
                    @if (User.IsInRole("Admin"))
                    {
                        <a asp-action="Edit" asp-route-id="@item.ProductId">Edit</a> <span>|</span>

                        if (item.IsDiscontinued == false)
                        {
                            <a asp-action="Delete" asp-route-id="@item.ProductId">Delete</a>
                        }
                        else
                        {
                            <a disabled="true" class="text-danger" style="text-decoration: line-through;" title="Can't delete - @item.ProductName is a current product">Delete</a>
                        }

                    }
                </td>
            </tr>
        }
    </tbody>
</table>
